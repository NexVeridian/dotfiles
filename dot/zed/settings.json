// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "ssh_connections": [
    {
      "host": "5.78.84.133",
      "username": "root",
      "projects": [
        {
          "paths": ["~/NexVeridian"]
        }
      ]
    }
  ],
  "features": {
    "edit_prediction_provider": "copilot"
  },
  "agent": {
    "always_allow_tool_actions": true,
    "inline_assistant_model": {
      "provider": "copilot_chat",
      "model": "claude-3.7-sonnet"
    },
    "profiles": {
      "ask": {
        "name": "Ask",
        "tools": {
          "symbol_info": true,
          "open": true,
          "contents": true,
          "diagnostics": true,
          "fetch": true,
          "list_directory": true,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "thinking": true
        },
        "enable_all_context_servers": false,
        "context_servers": {}
      },
      "write": {
        "name": "Write",
        "tools": {
          "open": false,
          "create_directory": true,
          "terminal": true,
          "batch_tool": true,
          "code_symbols": true,
          "copy_path": true,
          "create_file": true,
          "delete_path": false,
          "diagnostics": true,
          "edit_file": true,
          "fetch": true,
          "list_directory": true,
          "move_path": false,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "symbol_info": true,
          "thinking": true
        },
        "enable_all_context_servers": true,
        "context_servers": {}
      }
    },
    "default_profile": "write",
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-3.7-sonnet"
    },
    "version": "2"
  },
  "telemetry": {
    "metrics": false,
    "diagnostics": false
  },
  "ui_font_size": 16,
  "buffer_font_size": 16,
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "One Dark"
  },
  "languages": {
    // Biome
    "JavaScript": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },
    "TypeScript": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },
    "JSX": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },
    "TSX": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },
    "JSON": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },
    "CSS": {
      "formatter": {
        "language_server": {
          "name": "biome"
        }
      }
    },

    "Rust": {
      "inlay_hints": {
        // Global switch to toggle hints on and off, switched off by default.
        "enabled": true,
        // Toggle certain types of hints on and off, all switched on by default.
        "show_type_hints": true,
        "show_parameter_hints": true,
        // Corresponds to null/None LSP hint type value.
        "show_other_hints": true,
        // Time to wait after editing the buffer, before requesting the hints,
        // set to 0 to disable debouncing.
        "edit_debounce_ms": 700,
        // Time to wait after scrolling the buffer, before requesting the hints,
        // set to 0 to disable debouncing.
        "scroll_debounce_ms": 50
      }
    },
    "Nix": {
      "language_servers": ["nixd", "!nil"]
    },
    "Python": {
      "formatter": {
        "external": {
          "command": "bash",
          "arguments": [
            "-c",
            "ruff check --exit-zero --fix --unsafe-fixes --stdin-filename {buffer_path} | ruff format --stdin-filename {buffer_path}"
          ]
        }
      }
    }
  },

  "lsp": {
    "rust-analyzer": {
      "initialization_options": {
        "check": {
          "command": "clippy"
        }
      }
    }
  }
}
